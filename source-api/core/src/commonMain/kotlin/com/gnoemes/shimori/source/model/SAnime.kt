package com.gnoemes.shimori.source.model

import kotlinx.datetime.Instant
import kotlinx.datetime.LocalDate

data class SAnime(
    val id: Long = 0,
    val name: String = "",
    val nameRu: String? = null,
    val nameEn: String? = null,
    val image: SImage? = null,
    val url: String? = null,
    val animeType: String? = null,
    val rating: Double? = null,
    val status: String? = null,
    val episodes: Int = 0,
    val episodesAired: Int = 0,
    val dateAired: LocalDate? = null,
    val dateReleased: LocalDate? = null,
    val nextEpisode: Int? = null,
    val nextEpisodeDate: Instant? = null,
    val ageRating: String? = null,
    val duration: Int? = null,
    val description: String? = null,
    val descriptionHtml: String? = null,
    val franchise: String? = null,
    val favorite: Boolean = false,
    val topicId: Long? = null,
    val genres: List<String>? = null,
    val track: STrack? = null,
    val videos: List<SAnimeVideo>? = null,
    val screenshots: List<SAnimeScreenshot>? = null,
    val fanDubbers: List<String>? = null,
    val fanSubbers: List<String>? = null,
    val characters: List<SCharacter>? = null,
    val charactersRoles: List<SCharacterRole>? = null,
) {

    constructor(
        entity: SAnime,
        track: STrack?,
    ) : this(
        id = entity.id,
        name = entity.name,
        nameRu = entity.nameRu,
        nameEn = entity.nameEn,
        image = entity.image,
        url = entity.url,
        animeType = entity.animeType,
        rating = entity.rating,
        status = entity.status,
        episodes = entity.episodes,
        episodesAired = entity.episodesAired,
        dateAired = entity.dateAired,
        dateReleased = entity.dateReleased,
        nextEpisode = entity.nextEpisode,
        nextEpisodeDate = entity.nextEpisodeDate,
        ageRating = entity.ageRating,
        duration = entity.duration,
        description = entity.description,
        descriptionHtml = entity.descriptionHtml,
        franchise = entity.franchise,
        favorite = entity.favorite,
        topicId = entity.topicId,
        genres = entity.genres,
        track = track,
        videos = entity.videos,
        screenshots = entity.screenshots,
        fanDubbers = entity.fanDubbers,
        fanSubbers = entity.fanSubbers,
        characters = entity.characters,
        charactersRoles = entity.charactersRoles
    )
}