import com.gnoemes.shimori.Libs
import com.gnoemes.shimori.Application
import com.gnoemes.shimori.Modules
import org.moallemi.gradle.internal.VersionCodeType

apply plugin: 'com.android.application'
apply from: '../android_commons.gradle'
apply from: '../android_core_dependencies.gradle'
apply plugin: 'org.moallemi.advanced-build-version'

android {
    def version = readVersion(new File("${project.projectDir}/version.properties"))

    advancedVersioning {
        nameOptions {
            versionMajor version["major"] as int
            versionMinor version["minor"] as int
            versionPatch version["patch"] as int
            versionBuild version["build"] as int
        }
        codeOptions {
            versionCodeType VersionCodeType.AUTO_INCREMENT_ONE_STEP
            dependsOnTasks 'release'
        }

        outputOptions {
            renameOutput true
            nameFormat 'Shimori-v' + versionName + '-${buildType}'
        }
    }


    def appVersionName = advancedVersioning.versionName
    def appVersionCode = advancedVersioning.versionCode

    println "config code: ${appVersionCode}, name: ${appVersionName}"

    defaultConfig {
        applicationId Application.id
        versionCode appVersionCode
        versionName appVersionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true

        buildConfigField 'String', 'ShikimoriClientId', "\"" + propOrDef("ShikimoriClientId", "") + "\""
        buildConfigField 'String', 'ShikimoriClientSecret', "\"" + propOrDef("ShikimoriClientSecret", "") + "\""
        buildConfigField 'String', 'ShikimoriBaseUrl', ShikimoriBaseUrl
    }

    packagingOptions {
        // Exclude AndroidX version files
        exclude 'META-INF/*.version'
        // Exclude consumer proguard files
        exclude 'META-INF/proguard/*'
        // Exclude the Firebase/Fabric/other random properties files
        exclude '/*.properties'
        exclude 'fabric/*.properties'
        exclude 'META-INF/*.properties'
    }

    buildTypes {
        debug {
            versionNameSuffix "-dev"
            applicationIdSuffix ".debug"
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation project(Modules.baseAndroid)
    implementation project(Modules.common)
    implementation project(Modules.navigation)
    implementation project(Modules.domain)
    implementation project(Modules.model)
    implementation project(Modules.shikimoriAuth)

    implementation project(Modules.featureSearch)
    implementation project(Modules.featureCalendar)

    implementation Libs.Dagger.androidSupport
    kapt Libs.Dagger.compiler
    kapt Libs.Dagger.androidProcessor

    compileOnly Libs.AssistedInject.annotationDagger2
    kapt Libs.AssistedInject.processorDagger2

    implementation Libs.Coroutines.core
    implementation Libs.Coroutines.android

    implementation Libs.Epoxy.epoxy
    implementation Libs.Epoxy.paging
    implementation Libs.Epoxy.dataBinding
    kapt Libs.Epoxy.processor

    implementation Libs.gson
    implementation Libs.Retrofit.gsonConverter

    implementation Libs.mvRx

    implementation Libs.jodaTime

    implementation Libs.Glide.glide
    kapt Libs.Glide.compiler


    testImplementation Libs.junit
    testImplementation Libs.robolectric

    debugImplementation Libs.Debug.leakCanary
    debugImplementation Libs.Debug.dbDebug
}
