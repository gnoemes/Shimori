{
  "formatVersion": 1,
  "database": {
    "version": 1,
    "identityHash": "13dce1fff9a6fba727b8f715cc53ce24",
    "entities": [
      {
        "tableName": "animes",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `anime_shikimori_id` INTEGER, `name` TEXT NOT NULL, `name_ru` TEXT, `name_eng` TEXT, `url` TEXT, `type` TEXT, `rating` REAL, `anime_status` TEXT, `episodes_size` INTEGER NOT NULL, `episodesAired` INTEGER NOT NULL, `date_aired` TEXT, `date_released` TEXT, `next_episode` INTEGER, `next_episode_date` TEXT, `next_episode_end_date` TEXT, `age_rating` TEXT, `duration` TEXT, `description` TEXT, `description_html` TEXT, `franchise` TEXT, `favorite` INTEGER NOT NULL, `topic_id` INTEGER, `genres` TEXT, `name_ru_lower_case` TEXT, `image_original` TEXT, `image_preview` TEXT, `image_x96` TEXT, `image_x48` TEXT)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "shikimoriId",
            "columnName": "anime_shikimori_id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "nameRu",
            "columnName": "name_ru",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "nameEng",
            "columnName": "name_eng",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "url",
            "columnName": "url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "score",
            "columnName": "rating",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "status",
            "columnName": "anime_status",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "episodes",
            "columnName": "episodes_size",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "episodesAired",
            "columnName": "episodesAired",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "dateAired",
            "columnName": "date_aired",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "dateReleased",
            "columnName": "date_released",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "nextEpisode",
            "columnName": "next_episode",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "nextEpisodeDate",
            "columnName": "next_episode_date",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "nextEpisodeEndDate",
            "columnName": "next_episode_end_date",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "ageRating",
            "columnName": "age_rating",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "duration",
            "columnName": "duration",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "descriptionHtml",
            "columnName": "description_html",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "franchise",
            "columnName": "franchise",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "favorite",
            "columnName": "favorite",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "topicId",
            "columnName": "topic_id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "genres",
            "columnName": "genres",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "searchName",
            "columnName": "name_ru_lower_case",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "image.original",
            "columnName": "image_original",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "image.preview",
            "columnName": "image_preview",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "image.x96",
            "columnName": "image_x96",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "image.x48",
            "columnName": "image_x48",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_animes_anime_shikimori_id",
            "unique": true,
            "columnNames": [
              "anime_shikimori_id"
            ],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_animes_anime_shikimori_id` ON `${TABLE_NAME}` (`anime_shikimori_id`)"
          },
          {
            "name": "index_animes_next_episode_date",
            "unique": false,
            "columnNames": [
              "next_episode_date"
            ],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_animes_next_episode_date` ON `${TABLE_NAME}` (`next_episode_date`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "ftsVersion": "FTS4",
        "ftsOptions": {
          "tokenizer": "simple",
          "tokenizerArgs": [],
          "contentTable": "animes",
          "languageIdColumnName": "",
          "matchInfo": "FTS4",
          "notIndexedColumns": [],
          "prefixSizes": [],
          "preferredOrder": "ASC"
        },
        "contentSyncTriggers": [
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_animes_fts_BEFORE_UPDATE BEFORE UPDATE ON `animes` BEGIN DELETE FROM `animes_fts` WHERE `docid`=OLD.`rowid`; END",
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_animes_fts_BEFORE_DELETE BEFORE DELETE ON `animes` BEGIN DELETE FROM `animes_fts` WHERE `docid`=OLD.`rowid`; END",
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_animes_fts_AFTER_UPDATE AFTER UPDATE ON `animes` BEGIN INSERT INTO `animes_fts`(`docid`, `name`, `name_ru_lower_case`) VALUES (NEW.`rowid`, NEW.`name`, NEW.`name_ru_lower_case`); END",
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_animes_fts_AFTER_INSERT AFTER INSERT ON `animes` BEGIN INSERT INTO `animes_fts`(`docid`, `name`, `name_ru_lower_case`) VALUES (NEW.`rowid`, NEW.`name`, NEW.`name_ru_lower_case`); END"
        ],
        "tableName": "animes_fts",
        "createSql": "CREATE VIRTUAL TABLE IF NOT EXISTS `${TABLE_NAME}` USING FTS4(`name` TEXT COLLATE NOCASE, `name_ru_lower_case` TEXT, content=`animes`)",
        "fields": [
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "nameRu",
            "columnName": "name_ru_lower_case",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "rates",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `shikimori_id` INTEGER, `anime_id` INTEGER, `manga_id` INTEGER, `ranobe_id` INTEGER, `target_type` TEXT, `status` TEXT, `score` INTEGER, `comment` TEXT, `episodes` INTEGER, `chapters` INTEGER, `volumes` INTEGER, `re_counter` INTEGER, `date_created` TEXT, `date_updated` TEXT)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "shikimoriId",
            "columnName": "shikimori_id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "animeId",
            "columnName": "anime_id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "mangaId",
            "columnName": "manga_id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "ranobeId",
            "columnName": "ranobe_id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "targetType",
            "columnName": "target_type",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "status",
            "columnName": "status",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "score",
            "columnName": "score",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "comment",
            "columnName": "comment",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "episodes",
            "columnName": "episodes",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "chapters",
            "columnName": "chapters",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "volumes",
            "columnName": "volumes",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "reCounter",
            "columnName": "re_counter",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "dateCreated",
            "columnName": "date_created",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "dateUpdated",
            "columnName": "date_updated",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_rates_shikimori_id",
            "unique": true,
            "columnNames": [
              "shikimori_id"
            ],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_rates_shikimori_id` ON `${TABLE_NAME}` (`shikimori_id`)"
          },
          {
            "name": "index_rates_anime_id",
            "unique": true,
            "columnNames": [
              "anime_id"
            ],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_rates_anime_id` ON `${TABLE_NAME}` (`anime_id`)"
          },
          {
            "name": "index_rates_manga_id",
            "unique": true,
            "columnNames": [
              "manga_id"
            ],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_rates_manga_id` ON `${TABLE_NAME}` (`manga_id`)"
          },
          {
            "name": "index_rates_ranobe_id",
            "unique": true,
            "columnNames": [
              "ranobe_id"
            ],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_rates_ranobe_id` ON `${TABLE_NAME}` (`ranobe_id`)"
          },
          {
            "name": "index_rates_date_created",
            "unique": false,
            "columnNames": [
              "date_created"
            ],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_rates_date_created` ON `${TABLE_NAME}` (`date_created`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "last_requests",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `request` TEXT NOT NULL, `entity_id` INTEGER NOT NULL, `timestamp` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "request",
            "columnName": "request",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "entityId",
            "columnName": "entity_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "timestamp",
            "columnName": "timestamp",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_last_requests_request_entity_id",
            "unique": true,
            "columnNames": [
              "request",
              "entity_id"
            ],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_last_requests_request_entity_id` ON `${TABLE_NAME}` (`request`, `entity_id`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "users",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `shikimori_id` INTEGER, `nickname` TEXT NOT NULL, `name` TEXT, `about` TEXT, `common_info` TEXT, `sex` TEXT, `website` TEXT, `date_birth` TEXT, `locale` TEXT, `full_years` INTEGER, `location` TEXT, `show_comments` INTEGER NOT NULL, `friend` INTEGER NOT NULL, `ignored` INTEGER NOT NULL, `banned` INTEGER NOT NULL, `last_online` TEXT, `is_me` INTEGER NOT NULL, `image_original` TEXT, `image_preview` TEXT, `image_x96` TEXT, `image_x48` TEXT)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "shikimoriId",
            "columnName": "shikimori_id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "nickname",
            "columnName": "nickname",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "about",
            "columnName": "about",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "commonInfo",
            "columnName": "common_info",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "sex",
            "columnName": "sex",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "website",
            "columnName": "website",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "dateBirth",
            "columnName": "date_birth",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "locale",
            "columnName": "locale",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "fullYears",
            "columnName": "full_years",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "location",
            "columnName": "location",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "showComments",
            "columnName": "show_comments",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "friend",
            "columnName": "friend",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ignored",
            "columnName": "ignored",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "banned",
            "columnName": "banned",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastOnlineAt",
            "columnName": "last_online",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isMe",
            "columnName": "is_me",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "image.original",
            "columnName": "image_original",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "image.preview",
            "columnName": "image_preview",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "image.x96",
            "columnName": "image_x96",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "image.x48",
            "columnName": "image_x48",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_users_shikimori_id",
            "unique": true,
            "columnNames": [
              "shikimori_id"
            ],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_users_shikimori_id` ON `${TABLE_NAME}` (`shikimori_id`)"
          },
          {
            "name": "index_users_is_me",
            "unique": false,
            "columnNames": [
              "is_me"
            ],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_users_is_me` ON `${TABLE_NAME}` (`is_me`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "rate_sort",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `type` INTEGER, `sortOption` TEXT NOT NULL, `isDescending` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "sortOption",
            "columnName": "sortOption",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "isDescending",
            "columnName": "isDescending",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_rate_sort_type",
            "unique": true,
            "columnNames": [
              "type"
            ],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_rate_sort_type` ON `${TABLE_NAME}` (`type`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "pinned",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `target_id` INTEGER, `target_type` TEXT NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "targetId",
            "columnName": "target_id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "targetType",
            "columnName": "target_type",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_pinned_target_type",
            "unique": false,
            "columnNames": [
              "target_type"
            ],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_pinned_target_type` ON `${TABLE_NAME}` (`target_type`)"
          }
        ],
        "foreignKeys": []
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, '13dce1fff9a6fba727b8f715cc53ce24')"
    ]
  }
}