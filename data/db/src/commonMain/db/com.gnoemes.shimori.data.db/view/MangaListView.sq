CREATE VIEW mangaListView AS
SELECT
    title.id,
    title.name,
    title.name_ru AS nameRu,
    title.name_eng AS nameEn,
    title.image_original,
    title.image_preview,
    title.image_x96,
    title.image_x48,
    title.manga_type,
    title.rating,
    title.status,
    title.volumes,
    title.chapters,
    title.date_aired,
    title.date_released,
    r.id AS rateId,
    r.status AS rateStatus,
    r.score,
    r.comment,
    r.progress,
    r.re_counter,
    r.date_created,
    r.date_updated,
    p.id AS pinId
FROM manga AS title
INNER JOIN rate AS r ON r.target_id = title.id AND r.target_type = "MANGA"
LEFT OUTER JOIN pinned AS p ON p.target_id = title.id AND p.target_type = r.target_type;

queryByStatusSortName:
SELECT * FROM mangaListView
WHERE rateStatus = :status
ORDER BY
(CASE :descending WHEN 1 THEN name END) DESC,
(CASE :descending WHEN 0 THEN name END) ASC
LIMIT :limit OFFSET :offset;

queryByStatusSortProgress:
SELECT * FROM mangaListView
WHERE rateStatus = :status
ORDER BY
(CASE :descending WHEN 1 THEN progress END) DESC,
(CASE :descending WHEN 0 THEN progress END) ASC,
name ASC
LIMIT :limit OFFSET :offset;

queryByStatusSortDateCreated:
SELECT * FROM mangaListView
WHERE rateStatus = :status
ORDER BY
(CASE :descending WHEN 1 THEN date_created END) DESC,
(CASE :descending WHEN 0 THEN date_created END) ASC,
name ASC
LIMIT :limit OFFSET :offset;

queryByStatusSortDateUpdated:
SELECT * FROM mangaListView
WHERE rateStatus = :status
ORDER BY
(CASE :descending WHEN 1 THEN date_updated END) DESC,
(CASE :descending WHEN 0 THEN date_updated END) ASC,
name ASC
LIMIT :limit OFFSET :offset;

queryByStatusSortDateAired:
SELECT * FROM mangaListView
WHERE rateStatus = :status
ORDER BY
(CASE :descending WHEN 1 THEN datetime(date_aired) END) DESC,
(CASE :descending WHEN 0 THEN datetime(IFNULL(date_aired, '9999-12-31')) END) ASC,
name ASC
LIMIT :limit OFFSET :offset;

queryByStatusSortScore:
SELECT * FROM mangaListView
WHERE rateStatus = :status
ORDER BY
(CASE :descending WHEN 1 THEN score END) DESC,
(CASE :descending WHEN 0 THEN score END) ASC,
name ASC
LIMIT :limit OFFSET :offset;

queryByStatusSortSize:
SELECT * FROM mangaListView
WHERE rateStatus = :status
ORDER BY
(CASE :descending WHEN 1 THEN chapters END) DESC,
(CASE :descending WHEN 0 THEN chapters END) ASC,
name ASC
LIMIT :limit OFFSET :offset;

queryByStatusSortRating:
SELECT * FROM mangaListView
WHERE rateStatus = :status
ORDER BY
(CASE :descending WHEN 1 THEN rating END) DESC,
(CASE :descending WHEN 0 THEN rating END) ASC,
name ASC
LIMIT :limit OFFSET :offset;
