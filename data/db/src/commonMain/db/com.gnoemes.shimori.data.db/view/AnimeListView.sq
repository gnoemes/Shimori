CREATE VIEW animeListView AS
SELECT
    title.id,
    title.name,
    title.name_ru AS nameRu,
    title.name_eng AS nameEn,
    title.image_original,
    title.image_preview,
    title.image_x96,
    title.image_x48,
    title.anime_type,
    title.rating,
    title.status,
    title.episodes,
    title.episodes_aired,
    title.date_aired,
    title.date_released,
    title.duration,
    title.next_episode,
    title.next_episode_date,
    title.next_episode_end_date,
    track.id AS trackId,
    track.status AS trackStatus,
    track.score,
    track.comment,
    track.progress,
    track.re_counter,
    track.date_created,
    track.date_updated,
    p.id AS pinId
FROM anime AS title
INNER JOIN track AS track ON track.target_id = title.id AND track.target_type = "ANIME"
LEFT OUTER JOIN pinned AS p ON p.target_id = title.id AND p.target_type = track.target_type;


queryByStatusSortName:
SELECT * FROM animeListView
WHERE trackStatus = :status
ORDER BY
(CASE :descending WHEN 1 THEN name END) DESC,
(CASE :descending WHEN 0 THEN name END) ASC
LIMIT :limit OFFSET :offset;

queryByStatusSortProgress:
SELECT * FROM animeListView
WHERE trackStatus = :status
ORDER BY
(CASE :descending WHEN 1 THEN progress END) DESC,
(CASE :descending WHEN 0 THEN progress END) ASC,
name ASC
LIMIT :limit OFFSET :offset;


queryByStatusSortDateCreated:
SELECT * FROM animeListView
WHERE trackStatus = :status
ORDER BY
(CASE :descending WHEN 1 THEN date_created END) DESC,
(CASE :descending WHEN 0 THEN date_created END) ASC,
name ASC
LIMIT :limit OFFSET :offset;

queryByStatusSortDateUpdated:
SELECT * FROM animeListView
WHERE trackStatus = :status
ORDER BY
(CASE :descending WHEN 1 THEN date_updated END) DESC,
(CASE :descending WHEN 0 THEN date_updated END) ASC,
name ASC
LIMIT :limit OFFSET :offset;

queryByStatusSortDateAired:
SELECT * FROM animeListView
WHERE trackStatus = :status
ORDER BY
(CASE :descending WHEN 1 THEN datetime(date_aired) END) DESC,
(CASE :descending WHEN 0 THEN datetime(IFNULL(date_aired, '9999-12-31')) END) ASC,
name ASC
LIMIT :limit OFFSET :offset;

queryByStatusSortScore:
SELECT * FROM animeListView
WHERE trackStatus = :status
ORDER BY
(CASE :descending WHEN 1 THEN score END) DESC,
(CASE :descending WHEN 0 THEN score END) ASC,
name ASC
LIMIT :limit OFFSET :offset;

queryByStatusSortSize:
SELECT * FROM animeListView
WHERE trackStatus = :status
ORDER BY
(CASE :descending WHEN 1 THEN episodes END) DESC,
(CASE :descending WHEN 0 THEN episodes END) ASC,
name ASC
LIMIT :limit OFFSET :offset;

queryByStatusSortRating:
SELECT * FROM animeListView
WHERE trackStatus = :status
ORDER BY
(CASE :descending WHEN 1 THEN rating END) DESC,
(CASE :descending WHEN 0 THEN rating END) ASC,
name ASC
LIMIT :limit OFFSET :offset;
